<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">
    <!--不继承自jobbean基类的写法，配置为MyJob类-->
    <!--&lt;!&ndash;加入定时任务quartz配置&ndash;&gt;-->
    <!--&lt;!&ndash; 这个类用来做需要完成的业务&ndash;&gt;-->
    <!--<bean id="myJob" class="com.yjtse.dto.MyJob"></bean>-->

    <!--&lt;!&ndash; 定时任务 &ndash;&gt;-->
    <!--&lt;!&ndash; 定义调用对象和调用对象的方法，这个配置和普通的一样的,id是JobDetail的名字  &ndash;&gt;-->
    <!--<bean id="job2" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
    <!--&lt;!&ndash; 调用的类  &ndash;&gt;-->
    <!--<property name="targetObject" ref="myJob"/>-->
    <!--&lt;!&ndash; 调用类中的方法  &ndash;&gt;-->
    <!--<property name="targetMethod" value="doSomething"/>-->
    <!--&lt;!&ndash; 是否并发  &ndash;&gt;-->
    <!--<property name="concurrent" value="false"/>-->
    <!--</bean>-->
    <bean id="job1" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.yjtse.dto.MyJob"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="timeout" value="0"/>
                <entry key="socketId" value="11303010250"/>
            </map>
        </property>
    </bean>

    <!-- SimpleTriggerBean 触发器 -->
    <!--<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">-->
    <!--<property name="jobDetail" ref="job2"/>-->
    <!--<property name="startDelay" value="0"/>&lt;!&ndash; 调度工厂实例化后，经过0秒开始执行调度 &ndash;&gt;-->
    <!--<property name="repeatInterval" value="2000"/>&lt;!&ndash; 每2秒调度一次 &ndash;&gt;-->
    <!--</bean>-->

    <!--&lt;!&ndash; 定义触发时间 ，这边就不同了，这里必须将时间设置成无限长，因为我们要去读取数据库的时间来做为定时器的触发时间&ndash;&gt;-->
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean ">
        <property name="jobDetail" ref="job1"/>
        <!-- cron表达式  先设置为1s执行一次看看效果-->
        <!--<property name="cronExpression" value="0 0 0 1 1 ? 2099"/>-->
        <property name="cronExpression" value="0/3 * * * * ?"/>
    </bean>


    <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序  -->
    <bean id="startQuertz" lazy-init="false" autowire="no"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTrigger"/>
                <!--<ref bean="simpleTrigger"/>-->
            </list>
        </property>
    </bean>

    <!--这个类是用来设置触发时间的， startJobs方法启动调度容器，然后按照上面触发器每隔1s执行所配置的myJob2.doSomething()方法 -->
    <bean id="quartzManager" class="com.yjtse.dto.QuartzManager" lazy-init="false" init-method="startJobs">
        <!--这个对象一定要注入，这样类才能进行管理，还有在类型要用get set方法，不然会报错。-->
        <property name="scheduler" ref="startQuertz"/>
    </bean>

</beans>